import Head from 'next/head'
import { useEffect, useRef, useState } from 'react'

// Pages
import About from '../components/About'
import Main from '../components/Main'
import NavbarFloating from '../components/NavbarFloating'
import Projects from '../components/Projects'
import Skills from '../components/Skills'
import Contact from '../components/HomePageComponents/Contact'

export default function Home() {



















    const mainRef = useRef();
    const aboutRef = useRef();
    const skillsRef = useRef();
    const projectsRef = useRef();
    const contactRef = useRef();
    const [scrolledIntoViewElement, setScrolledIntoViewElement] = useState('');
    // console.log(scrolledIntoViewElement)

    useEffect(() => {
        const observer = new IntersectionObserver((entries) => {
            const entry = entries[0];
            console.log(entry.target.id + ' state:', entry.isIntersecting);
            // console.log(entry);



            if (entry.isIntersecting) {
                const sectionId = entry.target.id
                const scrolledElement = sectionId.substring(0, sectionId.indexOf('-'));
                setScrolledIntoViewElement(scrolledElement);
            }
        });

        // const obs = new window.IntersectionObserver(([entry]) => {
        //     console.log(entry)
        //     console.log(entry.boundingClientRect.bottom)
        //     // console.log(window.scrollY);
        //     if (entry.isIntersecting && entry.boundingClientRect.bottom < window.scrollY) {
        //         console.log('Enter')
        //         // position("VISIBLE") // do things if visible
        //         return
        //     }
        //     console.log('Leave')
        //     if (entry.boundingClientRect.top > 0) {
        //         // position("BELOW") // do things if below
        //         console.log('one?')
        //     } else {
        //         console.log('two?')
        //         // position("ABOVE") // do things if above
        //     }
        //     }, {
        //     root: null,
        //     threshold: 0,
        // })
            
        mainRef !== null && observer.observe(mainRef.current)
        aboutRef !== null && observer.observe(aboutRef.current)
        // aboutRef !== null && obs.observe(aboutRef.current)
        skillsRef !== null && observer.observe(skillsRef.current)
        projectsRef !== null && observer.observe(projectsRef.current)
        contactRef !== null && observer.observe(contactRef.current)
    }, [])

    return (
        <div className='mb-20'>
            <Head>
                <title>AJ | Portfolio</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <NavbarFloating view={scrolledIntoViewElement} />

            <section id='home-section' className='mb-[10rem]' ref={mainRef}>
                <Main />
            </section>

            <section id='about-section' className='mb-[10rem]' ref={aboutRef}>
                <About />
            </section>
            
            <section id='skills-section' className='mb-[10rem]' ref={skillsRef}>
                <Skills />
            </section>

            <section id='projects-section' className='mb-[10rem]' ref={projectsRef}>
                <Projects />
            </section>
            
            <section id='contact-section' className='mb-[10rem]' ref={contactRef}>
                <Contact />
            </section>
        </div>
    )
}
